TOP K FREQUENT ELEMENTS (NC)
-----------------------

Given an integer array nums and an integer k, return the k most frequent elements. You may return the answer in any order.


Example 1:
-> Input: nums = [1,1,1,2,2,3], k = 2
-> Output: [1,2]

Example 2:
-> Input: nums = [1], k = 1
-> Output: [1] 

Constraints:
-> 1 <= nums.length <= 105
-> -104 <= nums[i] <= 104
-> k is in the range [1, the number of unique elements in the array].
-> It is guaranteed that the answer is unique.


class Solution
public:
	vector<int> top_k_frequent_elements (vector<int> nums, int k) {
		unordered_map<int, int> frequency;
		for (auto num : nums) {
			++frequency[num];
		}
		
		priority_queue<pair<int, int>, vector<pair<int, int>>, greater<pair<int, int>>> pq;
		for (auto [num, freq] : frequency) {
			pq.push({freq, num});
			if (pq.size() > k) {
				pq.pop();
			}
		}

		vector<int> top_k;
		while (!pq.empty()) {
			top_k.push_back(pq.top().second);
			pq.pop();
		}
		return top_k				
	}
};