VALID PARENTHASIS (NC)
----------------- easy

Given a string s containing just the characters '(', ')', '{', '}', '[' and ']', determine if the input string is valid.

An input string is valid if:

Open brackets must be closed by the same type of brackets.
Open brackets must be closed in the correct order.
Every close bracket has a corresponding open bracket of the same type.



Example 1:
-> Input: s = "()"
-> Output: true

Example 2:
-> Input: s = "()[]{}"
-> Output: true

Example 3:
-> Input: s = "(]"
-> Output: false

Example 4:
-> Input: s = "([])"
-> Output: true

Constraints:
-> 1 <= s.length <= 104
-> s consists of parentheses only '()[]{}'.


class Solution {
public:
	bool is_valid (string str) {
		unordered_set<cbar> open = {'(', '[', '{'};
		stack<char> s;
		for (auto ch : str) {
			if (open.find(ch) != open.end()) {
				s.push(ch);
			}
			else {
				if (s.empty()) {
					return false;
				}
				else if (ch == ')' && s.top() != '(') {
					return false;
				}
				else if (ch == '}' && s.top() != '{') {
					return false;
				}
				else if (ch == ']' && s.top() != '[') {
					return false;
				}
				else {
					s.pop();
				}
			}
		}
		return s.empty();
	}
};